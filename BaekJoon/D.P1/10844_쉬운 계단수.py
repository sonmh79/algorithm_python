import sys
from collections import defaultdict

"""
    풀이: 
    인접한 자리 수의 차이가 모두 1이여야 한다.
    이전 자리 수 길이(n-1)의 계단 수의 마지막 자리 수를 확인하고 다음 자리 수 길이(n)의 계단 수를 개수를 알 수 있다.
    길이가 n인 계단 수의 마지막 자리를 딕셔너리의 key 값으로 관리하면서 해당 계단 수의 개수를 value로 설정해 계단 수의 개수를 관리할 수 있다.

    n = 2일때, 계단 수는 10 12 21 23 32 34 ... 87 89 98 로 총 17개이다.
    
    조건 1) 어떤 계단 수의 마지막 자리가 k이라면 다음 계단 수는 그 계단 수에 k-1 과 k+1을 붙이면 된다.(k는 1~8)
    조건 2) 단, k가 1일 때는 다음 계단 수를 만들기 위해 0만 붙일 수 있고, 9일 때는 8만 붙일 수 있다.

    예를 들어, n = 3인 계단 수를 만들기 위해 
    10의 뒤에 1을 붙여 101을 만들 수 있고,
    12 뒤에 1 과 3을 붙여 121 123 를 만들 수 있다.
    21 뒤에 0과 1을 붙여 210 212 를 만들 수 있다.
    ...
    98 뒤에 9를 붙여 989 를 만들 수 있다.
    
    길이가 n자리인 모든 계단 수의 개수는 딕셔너리의 value값의 합이다.
"""

input = sys.stdin.readline

n = int(input())

d = {
    0:0,
    1:1,
    2:1,
    3:1,
    4:1,
    5:1,
    6:1,
    7:1,
    8:1,
    9:1
}

for _ in range(n-1):
    dd = defaultdict(int)
    for i in d:
        if i == 0:
            dd[i+1] += d[i]
        elif i == 9:
            dd[i-1] += d[i]
        else:
            dd[i+1] += d[i]
            dd[i-1] += d[i]
    d = dd

print(sum([i for i in d.values()])%1000000000)